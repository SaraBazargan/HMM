Python 3.4.3 (v3.4.3:9b73f1c3e601, Feb 24 2015, 22:43:06) [MSC v.1600 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> ================================ RESTART ================================
>>> 
Enter the number of your states: 3
Enter the sequence of observations by space: red blue red
enter the numbers to make matrix_p: .4 .6 .0
matrix_P=  [[0.4], [0.6], [0.0]]
matrix_B=  {(0, 'blue'): 0.6, (2, 'blue'): 0.3, (1, 'blue'): 0.5, (0, 'red'): 0.6, (2, 'red'): 0.3, (1, 'red'): 0.5}
 enter the numbers to make matrix_A: .4 .3 .3 .2 .6 .2 .1 .1 .8
matrix_A=  [[0.4, 0.3, 0.3], [0.2, 0.6, 0.2], [0.1, 0.1, 0.8]]
alphas [[0.24, 0.3, 0.0], [0.0936, 0.126, 0.0396], [0.03996, 0.05382, 0.025488]]
P(O) by foreward=  0.119268

betas [[1, 1, 1], [0.48, 0.48, 0.35], [0.21869999999999998, 0.2226, 0.13679999999999998]]
P(O) by backward=  0.11926799999999999

gamas [[0.4444444444444444, 0.5555555555555555, 0.0], [0.37669785692725627, 0.5070932689405373, 0.11620887413220647], [0.361031495613315, 0.49492532998293876, 0.14404317440374637]]

omid_gama [0.9999999999999999, 1.0, 1.0]


new matrix A [[0.32433903916053813, 0.37555046639641254, 0.09293925683547583], [0.06670800511745002, 0.07702881475305326, 0.02859646096851228], [0.013303206792262726, 0.015338187082506314, 0.006196562893788941]]

new matrix P [0.4444444444444444, 0.5555555555555555, 0.0]

new matrix B [0.8054759400577595, 0.5070932689405374, 0.8054759400577594, 0.5070932689405373, 0.8054759400577594, 0.5070932689405373]
>>> 
